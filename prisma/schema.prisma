// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  username String @unique
  password String
  role String @default("User")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  articels Articels[]
}

model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  articels Articels[]
  gallery Gallery[]
}

model Articels {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  image String
  title String
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  categoryId String @db.ObjectId
  category Category @relation(fields: [categoryId], references: [id])
}

model Gallery {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  image String?
  title String
  content String?
  division String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  categoryId String @db.ObjectId
  category Category @relation(fields: [categoryId], references: [id])
}